# 多阶段构建Dockerfile - 用于GoComicMosaic Go后端
# 第一阶段：构建Go应用
FROM golang:1.22-alpine AS builder

# 安装构建依赖（包括CGO所需的工具链）
RUN apk update && \
    apk add --no-cache gcc musl-dev sqlite-dev git && \
    rm -rf /var/cache/apk/*

# 设置工作目录
WORKDIR /app/gobackend

# 复制Go模块文件
COPY go.mod go.sum ./

# 下载Go依赖
RUN go mod download

# 复制项目文件
COPY . .

# 执行构建脚本
RUN ./build-backend.sh

# 第二阶段：创建运行环境
FROM alpine:3.19

# 设置工作目录
WORKDIR /app

# 安装运行时依赖
RUN apk update && \
    apk add --no-cache ca-certificates tzdata sqlite-libs && \
    rm -rf /var/cache/apk/*

# 设置时区
ENV TZ=Asia/Shanghai

# 设置默认环境变量
ENV DB_PATH=/app/data/database.db
ENV ASSETS_PATH=/app/data/assets
ENV GIN_MODE=release
ENV PORT=8000

# 从构建阶段复制二进制文件
COPY --from=builder /app/gobackend/output/app /app/app

# 创建必要的目录
RUN mkdir -p /app/data /app/data/imgs /app/data/uploads

# 设置卷挂载点
VOLUME ["/app/data"]

# 暴露端口
EXPOSE 8000

# 设置启动命令
CMD ["/app/app"]